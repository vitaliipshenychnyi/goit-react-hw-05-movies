{"version":3,"file":"static/js/536.4c041e57.chunk.js","mappings":"+SAEMA,EAAW,gCAGXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAKOC,EAAS,mCAAG,oGACAC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCAErBC,GAHqB,cACjBO,EADiB,yBAKhBA,EAASC,MALO,2CAAH,qDASTC,EAAc,mCAAG,WAAMC,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDW,EADC,mBAErBV,GAH0B,cACtBO,EADsB,yBAKrBA,EAASC,MALY,2CAAH,sDASdG,EAAO,mCAAG,WAAMD,GAAN,uFACEJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDW,EADC,2BAErBV,GAHmB,cACfO,EADe,yBAKdA,EAASC,MALK,2CAAH,sDASPI,EAAU,mCAAG,WAAMF,GAAN,uFACDJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDW,EADC,2BAErBV,GAHsB,cAClBO,EADkB,yBAKjBA,EAASC,MALQ,2CAAH,sDASVK,EAAO,mCAAG,WAAMC,GAAN,uFACER,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYe,EADZ,8CAErBd,GAHmB,cACfO,EADe,yBAKdA,EAASC,MALK,2CAAH,qD,qIC7CdO,EAAaC,EAAAA,GAAAA,GAAH,iKAgEhB,UArDe,WAAO,IAAD,EACnB,GAAoCC,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXd,EAAQ,UAAGI,EAAWW,IAAI,mBAAlB,QAAiC,GAEzCC,EAAS,mCAAG,gHAEKjB,EAAAA,EAAAA,IAAQC,GAFb,OAERiB,EAFQ,QAGRV,EAAQU,EAAKC,SACRC,QAKTX,EAASD,GACTG,EAAS,QALTA,EAAS,0FAAD,OAAqBV,EAArB,mEACRQ,EAAS,IACTI,EAAU,aAPE,gDAadF,EAAS,KAAMU,SAbD,yDAAH,qDAyBf,OACE,4BACE,kBAAOC,KAAK,OAAOC,MAAOtB,EAAUuB,SAVnB,SAAAC,GACnB,IAAMC,EAAgBD,EAAME,OAAOJ,MACnC,GAAsB,KAAlBG,EACF,OAAOpB,EAAc,CAAC,GAExBA,EAAc,CAAEL,SAAUyB,GAC3B,KAKG,mBAAQE,QAASX,EAAjB,SAA4B,WAEhB,aAAXL,IAAyB,uBAAIF,KAE9B,SAACR,EAAD,UACGM,EAAMqB,KAAI,SAAAC,GAAI,OACb,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMpB,GAAvC,SACGgB,EAAKK,SAFDL,EAAKE,GADD,QAUtB,C","sources":["api/fetchFilm.js","pages/movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n// const API_KEY = '91e9e43bc5abd62bce4a412250ca2b4a';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MWU5ZTQzYmM1YWJkNjJiY2U0YTQxMjI1MGNhMmI0YSIsInN1YiI6IjY0OGRmMWZjYzNjODkxMDBlYjMyOGIyNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.na6QWvyUcstLt3R2SMZMeFGFAjRDN7q7NqBOmfFB0qU',\n  },\n};\n\n// функція отримання переліку топових фільмів на день\nexport const getMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція отримання детальної інформації по обраному фільму\nexport const getDetailMovie = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція отримання детальної інформації про акторський склад для сторінки кінофільму\nexport const getCast = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція запиту оглядів для сторінки кінофільму\nexport const getReviews = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}/reviews?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція пошуку фільма за назвою\nexport const getFilm = async filmName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${filmName}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { getFilm } from 'api/fetchFilm';\nimport { Link } from 'react-router-dom';\n\nconst ListOfFilm = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  li {\n    font-size: 18px;\n    font-weight: 600;\n  }\n`;\n\nconst Movies = () => {\n  const [searchFilm, setSearchFilm] = useSearchParams();\n  const [films, setFilms] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n  const location = useLocation();\n  const filmName = searchFilm.get('filmName') ?? '';\n\n  const fetchFilm = async () => {\n    try {\n      const date = await getFilm(filmName);\n      const films = date.results;\n      if (!films.length) {\n        setError(`Фільми зі словом ${filmName} не знайдені`);\n        setFilms([]);\n        setStatus('rejected');\n      } else {\n        setFilms(films);\n        setError(null);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const updateSearch = event => {\n    const filmNameValue = event.target.value;\n    if (filmNameValue === '') {\n      return setSearchFilm({});\n    }\n    setSearchFilm({ filmName: filmNameValue });\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={filmName} onChange={updateSearch} />\n      <button onClick={fetchFilm}>Search</button>\n\n      {status === 'rejected' && <p>{error}</p>}\n\n      <ListOfFilm>\n        {films.map(film => (\n          <li key={film.id}>\n            <Link to={`${film.id}`} state={{ from: location }}>\n              {film.title}\n            </Link>\n          </li>\n        ))}\n      </ListOfFilm>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","options","method","headers","accept","Authorization","getMovies","axios","response","data","getDetailMovie","movie_id","getCast","getReviews","getFilm","filmName","ListOfFilm","styled","useSearchParams","searchFilm","setSearchFilm","useState","films","setFilms","error","setError","status","setStatus","location","useLocation","get","fetchFilm","date","results","length","message","type","value","onChange","event","filmNameValue","target","onClick","map","film","to","id","state","from","title"],"sourceRoot":""}