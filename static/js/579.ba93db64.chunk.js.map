{"version":3,"file":"static/js/579.ba93db64.chunk.js","mappings":"+SAEMA,EAAW,gCAGXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAKOC,EAAS,mCAAG,oGACAC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCAErBC,GAHqB,cACjBO,EADiB,yBAKhBA,EAASC,MALO,2CAAH,qDASTC,EAAc,mCAAG,WAAMC,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDW,EADC,mBAErBV,GAH0B,cACtBO,EADsB,yBAKrBA,EAASC,MALY,2CAAH,sDASdG,EAAO,mCAAG,WAAMD,GAAN,uFACEJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDW,EADC,2BAErBV,GAHmB,cACfO,EADe,yBAKdA,EAASC,MALK,2CAAH,sDASPI,EAAU,mCAAG,WAAMF,GAAN,uFACDJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDW,EADC,2BAErBV,GAHsB,cAClBO,EADkB,yBAKjBA,EAASC,MALQ,2CAAH,sDASVK,EAAO,mCAAG,WAAMC,GAAN,uFACER,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYe,EADZ,8CAErBd,GAHmB,cACfO,EADe,yBAKdA,EAASC,MALK,2CAAH,qD,sKCjDPO,EAAYC,EAAAA,GAAAA,QAAH,qEAKTC,EAAQD,EAAAA,GAAAA,GAAH,0GAOLE,EAAaF,EAAAA,GAAAA,GAAH,4I,SC6BvB,EAtCiB,WACf,OAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEItB,EAAAA,EAAAA,MAFJ,OAETG,EAFS,OAGTY,EAAQZ,EAAKoB,QACnBP,EAASD,GAJM,gDAMfG,EAAS,KAAMM,SANA,yDAAH,qDAUhBF,GACD,GAAE,KAGD,UAACZ,EAAD,YACE,SAACE,EAAD,UAAO,mBAENK,IAAS,uBAAG,+JAEb,SAACJ,EAAD,UACGE,EAAMU,KAAI,SAAAC,GAAI,OACb,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAKE,IAAMC,MAAO,CAAEC,KAAMX,GAA9C,SACGO,EAAKK,SAFDL,EAAKE,GADD,QAUtB,ECnCD,EAJa,WACX,OAAO,SAAC,EAAD,GACR,C","sources":["api/fetchFilm.js","components/FilmList/FilmList.stylaed.jsx","components/FilmList/FilmList.jsx","pages/home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n// const API_KEY = '91e9e43bc5abd62bce4a412250ca2b4a';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MWU5ZTQzYmM1YWJkNjJiY2U0YTQxMjI1MGNhMmI0YSIsInN1YiI6IjY0OGRmMWZjYzNjODkxMDBlYjMyOGIyNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.na6QWvyUcstLt3R2SMZMeFGFAjRDN7q7NqBOmfFB0qU',\n  },\n};\n\n// функція отримання переліку топових фільмів на день\nexport const getMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція отримання детальної інформації по обраному фільму\nexport const getDetailMovie = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція отримання детальної інформації про акторський склад для сторінки кінофільму\nexport const getCast = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція запиту оглядів для сторінки кінофільму\nexport const getReviews = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}/reviews?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція пошуку фільма за назвою\nexport const getFilm = async filmName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${filmName}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.section`\n  padding: 20px;\n  background-color: #fff;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n  font-size: 40px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const ListOfFilm = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  li {\n    font-size: 18px;\n    font-weight: 600;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'api/fetchFilm';\nimport { Title, Container, ListOfFilm } from './FilmList.stylaed';\n\nconst FilmList = () => {\n  const [films, setFilms] = useState([]);\n  const [error, setError] = useState(null);\n  const location = useLocation(); //для отримання шляху з якого переходимо для передачи через props\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        const data = await getMovies();\n        const films = data.results;\n        setFilms(films);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchFilms();\n  }, []);\n\n  return (\n    <Container>\n      <Title>Trending today</Title>\n\n      {error && <p>Вибачте, але щось пішло не так :(</p>}\n\n      <ListOfFilm>\n        {films.map(film => (\n          <li key={film.id}>\n            <Link to={`movies/${film.id}`} state={{ from: location }}>\n              {film.title}\n            </Link>\n          </li>\n        ))}\n      </ListOfFilm>\n    </Container>\n  );\n};\n\nexport default FilmList;\n","import FilmList from 'components/FilmList/FilmList';\n\nconst Home = () => {\n  return <FilmList />;\n};\n\nexport default Home;\n"],"names":["BASE_URL","options","method","headers","accept","Authorization","getMovies","axios","response","data","getDetailMovie","movie_id","getCast","getReviews","getFilm","filmName","Container","styled","Title","ListOfFilm","useState","films","setFilms","error","setError","location","useLocation","useEffect","fetchFilms","results","message","map","film","to","id","state","from","title"],"sourceRoot":""}