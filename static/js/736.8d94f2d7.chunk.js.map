{"version":3,"file":"static/js/736.8d94f2d7.chunk.js","mappings":"+SAEMA,EAAW,gCAGXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAKOC,EAAS,mCAAG,oGACAC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCAErBC,GAHqB,cACjBO,EADiB,yBAKhBA,EAASC,MALO,2CAAH,qDASTC,EAAc,mCAAG,WAAMC,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDW,EADC,mBAErBV,GAH0B,cACtBO,EADsB,yBAKrBA,EAASC,MALY,2CAAH,sDASdG,EAAO,mCAAG,WAAMD,GAAN,uFACEJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDW,EADC,2BAErBV,GAHmB,cACfO,EADe,yBAKdA,EAASC,MALK,2CAAH,sDASPI,EAAU,mCAAG,WAAMF,GAAN,uFACDJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDW,EADC,2BAErBV,GAHsB,cAClBO,EADkB,yBAKjBA,EAASC,MALQ,2CAAH,sDASVK,EAAO,mCAAG,WAAMC,GAAN,uFACER,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYe,EADZ,8CAErBd,GAHmB,cACfO,EADe,yBAKdA,EAASC,MALK,2CAAH,qD,iJCjDPO,E,OAAWC,GAAAA,GAAH,mX,SCoCrB,EAjCa,WACX,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAEKZ,EAAAA,EAAAA,IAAQM,GAFb,OAERT,EAFQ,OAGRY,EAAQZ,EAAKgB,KACnBC,QAAQC,IAAIN,GACZC,EAASD,GALK,yGAAH,qDASfG,GACD,GAAE,CAACN,KAGF,SAACF,EAAD,UACGK,EAAMO,KAAI,SAAAH,GAAI,OACb,2BACE,gBACEI,IAAG,yCAAoCJ,EAAKK,cAC5CC,IAAKN,EAAKO,QAEZ,yBAAG,SAAOP,EAAKO,SACf,yBAAG,cAAYP,EAAKQ,eANbR,EAAKP,GADD,KAYpB,C","sources":["api/fetchFilm.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n// const API_KEY = '91e9e43bc5abd62bce4a412250ca2b4a';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MWU5ZTQzYmM1YWJkNjJiY2U0YTQxMjI1MGNhMmI0YSIsInN1YiI6IjY0OGRmMWZjYzNjODkxMDBlYjMyOGIyNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.na6QWvyUcstLt3R2SMZMeFGFAjRDN7q7NqBOmfFB0qU',\n  },\n};\n\n// функція отримання переліку топових фільмів на день\nexport const getMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція отримання детальної інформації по обраному фільму\nexport const getDetailMovie = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція отримання детальної інформації про акторський склад для сторінки кінофільму\nexport const getCast = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція запиту оглядів для сторінки кінофільму\nexport const getReviews = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}/reviews?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція пошуку фільма за назвою\nexport const getFilm = async filmName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${filmName}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  padding: 20px 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  li {\n    box-shadow: 0px 10px 10px rgba(46, 47, 66, 0.08),\n      0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n    padding: 10px;\n    border-radius: 5px;\n    background-color: #edf3fb;\n    width: 150px;\n  }\n  img {\n    width: 100%;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCast } from 'api/fetchFilm';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [casts, setCasts] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const data = await getCast(id);\n        const casts = data.cast;\n        console.log(casts);\n        setCasts(casts);\n      } catch (error) {}\n    };\n\n    fetchCast();\n  }, [id]);\n\n  return (\n    <CastList>\n      {casts.map(cast => (\n        <li key={cast.id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`} //!!!!!!!!!!!!!!!!!!!!!!\n            alt={cast.name}\n          />\n          <p>Name: {cast.name}</p>\n          <p>Character: {cast.character}</p>\n        </li>\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","options","method","headers","accept","Authorization","getMovies","axios","response","data","getDetailMovie","movie_id","getCast","getReviews","getFilm","filmName","CastList","styled","id","useParams","useState","casts","setCasts","useEffect","fetchCast","cast","console","log","map","src","profile_path","alt","name","character"],"sourceRoot":""}