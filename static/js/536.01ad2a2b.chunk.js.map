{"version":3,"file":"static/js/536.01ad2a2b.chunk.js","mappings":"+SAEMA,EAAW,gCAGXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAKOC,EAAS,mCAAG,oGACAC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCAErBC,GAHqB,cACjBO,EADiB,yBAKhBA,EAASC,MALO,2CAAH,qDASTC,EAAc,mCAAG,WAAMC,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDW,EADC,mBAErBV,GAH0B,cACtBO,EADsB,yBAKrBA,EAASC,MALY,2CAAH,sDASdG,EAAO,mCAAG,WAAMD,GAAN,uFACEJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDW,EADC,2BAErBV,GAHmB,cACfO,EADe,yBAKdA,EAASC,MALK,2CAAH,sDASPI,EAAU,mCAAG,WAAMF,GAAN,uFACDJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDW,EADC,2BAErBV,GAHsB,cAClBO,EADkB,yBAKjBA,EAASC,MALQ,2CAAH,sDASVK,EAAO,mCAAG,WAAMC,GAAN,uFACER,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYe,EADZ,8CAErBd,GAHmB,cACfO,EADe,yBAKdA,EAASC,MALK,2CAAH,qD,2IC7CdO,EAAaC,EAAAA,GAAAA,GAAH,iKAWVC,EAAeD,EAAAA,GAAAA,KAAH,uSAcZE,EAAYF,EAAAA,GAAAA,QAAH,qEAKTG,EAAYH,EAAAA,GAAAA,EAAH,4DAiEf,UA5De,WAAO,IAAD,EACnB,GAAoCI,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXjB,EAAQ,UAAGO,EAAWW,IAAI,mBAAlB,QAAiC,IAE/CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAEKrB,EAAAA,EAAAA,IAAQC,GAFb,OAERqB,EAFQ,QAGRX,EAAQW,EAAKC,SAERC,QAAuB,KAAbvB,GAKnBW,EAASD,GACTG,EAAS,QALTA,EAAS,0FAAD,OAAqBb,EAArB,mEACRW,EAAS,IACTI,EAAU,aARE,gDAcdF,EAAS,KAAMW,SAdD,yDAAH,qDAkBfJ,GACD,IAUD,OACE,UAAChB,EAAD,YACE,UAACD,EAAD,YACE,kBAAOsB,KAAK,OAAOC,MAAO1B,EAAU2B,SAXrB,SAAAC,GACnB,IAAMC,EAAgBD,EAAME,OAAOJ,MACnC,GAAsB,KAAlBG,EACF,OAAOrB,EAAc,CAAC,GAExBA,EAAc,CAAER,SAAU6B,GAC3B,KAMK,2BAAO,+KAGG,aAAXf,IAAyB,SAACT,EAAD,UAAYO,KAEtC,SAACX,EAAD,UACGS,EAAMqB,KAAI,SAAAC,GAAI,OACb,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMpB,GAAvC,SACGgB,EAAKK,SAFDL,EAAKE,GADD,QAUtB,C","sources":["api/fetchFilm.js","pages/movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n// const API_KEY = '91e9e43bc5abd62bce4a412250ca2b4a';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MWU5ZTQzYmM1YWJkNjJiY2U0YTQxMjI1MGNhMmI0YSIsInN1YiI6IjY0OGRmMWZjYzNjODkxMDBlYjMyOGIyNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.na6QWvyUcstLt3R2SMZMeFGFAjRDN7q7NqBOmfFB0qU',\n  },\n};\n\n// функція отримання переліку топових фільмів на день\nexport const getMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція отримання детальної інформації по обраному фільму\nexport const getDetailMovie = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція отримання детальної інформації про акторський склад для сторінки кінофільму\nexport const getCast = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція запиту оглядів для сторінки кінофільму\nexport const getReviews = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}/reviews?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція пошуку фільма за назвою\nexport const getFilm = async filmName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${filmName}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getFilm } from 'api/fetchFilm';\nimport { Link } from 'react-router-dom';\n\nconst ListOfFilm = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  li {\n    font-size: 18px;\n    font-weight: 600;\n  }\n`;\n\nconst InputWrapper = styled.form`\n  box-shadow: 0px 10px 10px rgba(46, 47, 66, 0.08),\n    0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n  padding: 10px;\n  border-radius: 5px;\n  background-color: #edf3fb;\n  input {\n    outline: none;\n  }\n  label {\n    color: grey;\n  }\n`;\n\nconst Container = styled.section`\n  padding: 20px;\n  background-color: #fff;\n`;\n\nconst ErrorText = styled.p`\n  margin-top: 20px;\n  color: red;\n`;\n\nconst Movies = () => {\n  const [searchFilm, setSearchFilm] = useSearchParams();\n  const [films, setFilms] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n  const location = useLocation(); //для отримання шляху з якого переходимо для передачи через props\n  const filmName = searchFilm.get('filmName') ?? '';\n\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const date = await getFilm(filmName);\n        const films = date.results;\n\n        if (!films.length && filmName !== '') {\n          setError(`Фільми зі словом ${filmName} не знайдені`);\n          setFilms([]);\n          setStatus('rejected');\n        } else {\n          setFilms(films);\n          setError(null);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchFilm();\n  });\n\n  const updateSearch = event => {\n    const filmNameValue = event.target.value;\n    if (filmNameValue === '') {\n      return setSearchFilm({});\n    }\n    setSearchFilm({ filmName: filmNameValue });\n  };\n\n  return (\n    <Container>\n      <InputWrapper>\n        <input type=\"text\" value={filmName} onChange={updateSearch} />\n        <label> Пошук фільму за ключовим словом</label>\n      </InputWrapper>\n\n      {status === 'rejected' && <ErrorText>{error}</ErrorText>}\n\n      <ListOfFilm>\n        {films.map(film => (\n          <li key={film.id}>\n            <Link to={`${film.id}`} state={{ from: location }}>\n              {film.title}\n            </Link>\n          </li>\n        ))}\n      </ListOfFilm>\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","options","method","headers","accept","Authorization","getMovies","axios","response","data","getDetailMovie","movie_id","getCast","getReviews","getFilm","filmName","ListOfFilm","styled","InputWrapper","Container","ErrorText","useSearchParams","searchFilm","setSearchFilm","useState","films","setFilms","error","setError","status","setStatus","location","useLocation","get","useEffect","fetchFilm","date","results","length","message","type","value","onChange","event","filmNameValue","target","map","film","to","id","state","from","title"],"sourceRoot":""}